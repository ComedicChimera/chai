pub of 
    @intrinsic_op("add")
    oper + (a, b: i32) i32
    
    @intrinsic_op("add")
    oper + (a, b: u8) u8

    @intrinsic_op("add")
    oper + (a, b: rune) rune

    @intrinsic_op("smul")
    oper * (a, b: i32) i32
    
    @intrinsic_op("sdiv")
    oper // (a, b: i32) i32
    
    @intrinsic_op("srem")
    oper % (a, b: i32) i32

    @intrinsic_op("land")
    oper && (a, b: bool) bool
    
    @intrinsic
    def print_byte(b: u8) 
    
    def print_digit(d: i32) =
        # TODO: add in type casts
        print_byte('0' + d)
    
    def print_int(i: i32) = do
        let x = i
        let p = 10
    
        while p < i do
            print_digit(x % 10)
            x //= 10
            p *= 10