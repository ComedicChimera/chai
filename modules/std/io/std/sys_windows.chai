!! os = "windows"

import Buffer, nullptr from core.unsafe
import Handle from core.sys

let STD_INPUT_HANDLE = -10 as u32
let STD_OUTPUT_HANDLE = -11 as u32
let STD_ERROR_HANDLE = -12 as u32

@[dllimport("kernel32.dll"), call_conv("winapi")]
def GetStdHandle(n_std_handle: u32)

@[dllimport("kernel32.dll"), call_conv("winapi")]
def WriteConsole(h: Handle, buff: &u8, chars_to_write: u32, num_chars_written: &u32, reserved: &u8)

let win_Stdout = GetStdHandle(STD_OUTPUT_HANDLE)

pub
	def write_console(buff: Buffer[u8])
		WriteConsole(win_Stdout, buff._data, buff.len(), nullptr, nullptr)
	end	
end